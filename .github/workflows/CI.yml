name: AssistAPIServer_CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    if: github.event_name != 'pull_request' || github.event.pull_request.head.repo.full_name == github.repository
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: StockAssistPlatform

    env:
      GMAIL_USERNAME: ${{ secrets.GMAIL_USERNAME }}
      GMAIL_APP_PASSWORD: ${{ secrets.GMAIL_APP_PASSWORD }}
      JWT_SECRET: ${{ secrets.JWT_SECRET }}
      CRAWLING_DB_URL: ${{ secrets.CRAWLING_DB_URL }}
      CRAWLING_DB_USER: ${{ secrets.CRAWLING_DB_USER }}
      CRAWLING_DB_PASSWORD: ${{ secrets.CRAWLING_DB_PASSWORD }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: temurin  # OpenJDK의 한 배포판
          java-version: '17.0.12'
          cache: gradle

      # Gradle Wrapper 실행 권한 추가
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      # Gradle의 Checkstyle 플러그인을 사용해 코드 스타일 및 린트 검사를 진행
      - name: Run Lint Check (Checkstyle)
        run: ./gradlew checkstyleMain checkstyleTest --no-daemon

      # Checkstyle 리포트 업로드
      - name: Upload Checkstyle Report
        uses: actions/upload-artifact@v4
        with:
          name: checkstyle-report
          path: StockAssistPlatform/build/reports/checkstyle/*.html

      - name: Run Tests
        run: ./gradlew test --no-daemon

      - name: Clean Build Cache
        run: ./gradlew clean --no-daemon
